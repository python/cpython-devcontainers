name: release

on:
  workflow_dispatch:
    inputs:
      package:
        description: "Package name"
        required: true
        default: 'autoconf'
        type: choice
        options:
        - autoconf
        - devcontainer

run-name: "Release: ${{ inputs.package }}"

jobs:
  generate-version:
    concurrency:
      group: release-to-ghcr-${{ inputs.package }}
      cancel-in-progress: false
    if: contains('["brettcannon", "corona10", "erlend-aasland"]', github.actor)
    runs-on: ubuntu-latest
    outputs:
      builddate: ${{ steps.version.outputs.builddate }}
    steps:
      # Checkout push-to-registry action github repository
      - name: Set Calver Date
        run: |
          echo "builddate=$(date +'%Y.%m.%d')" >> $GITHUB_OUTPUT
        id: version

  build_amd64:
    needs: generate-version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login To GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./${{ inputs.package }}
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/python/${{ inputs.package }}:${{ needs.generate-version.outputs.builddate }}.${{ github.run_id }}-amd64

  build_arm64:
    needs: generate-version
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login To GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./${{ inputs.package }}
          platforms: linux/arm64
          push: true
          tags: |
            ghcr.io/python/${{ inputs.package }}:${{ needs.generate-version.outputs.builddate }}.${{ github.run_id }}-arm64

  set_manifest:
    needs: [generate-version, build_amd64, build_arm64]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login To GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Pull images
        run: |
          docker pull ghcr.io/python/${{ inputs.package }}:${{ needs.generate-version.outputs.builddate }}.${{ github.run_id }}-amd64
          docker tag ghcr.io/python/${{ inputs.package }}:${{ needs.generate-version.outputs.builddate }}.${{ github.run_id }}-amd64 ghcr.io/python/${{ inputs.package }}:amd64

          docker pull ghcr.io/python/${{ inputs.package }}:${{ needs.generate-version.outputs.builddate }}.${{ github.run_id }}-arm64
          docker tag ghcr.io/python/${{ inputs.package }}:${{ needs.generate-version.outputs.builddate }}.${{ github.run_id }}-arm64 ghcr.io/python/${{ inputs.package }}:arm64

      - name: Set manifest
        run: |
          docker manifest create ghcr.io/python/${{ inputs.package }}:${{ needs.generate-version.outputs.builddate }}.${{ github.run_id }} \
              ghcr.io/python/${{ inputs.package }}:amd64 \
              ghcr.io/python/${{ inputs.package }}:arm64

          docker manifest create ghcr.io/python/${{ inputs.package }}:latest \
              ghcr.io/python/${{ inputs.package }}:amd64 \
              ghcr.io/python/${{ inputs.package }}:arm64

          docker manifest push ghcr.io/python/${{ inputs.package }}:latest
          docker manifest push ghcr.io/python/${{ inputs.package }}:${{ needs.generate-version.outputs.builddate }}.${{ github.run_id }}
